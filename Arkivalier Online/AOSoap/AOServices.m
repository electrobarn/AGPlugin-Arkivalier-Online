/*
	AOServices.m
	Creates a list of the services available with the AO prefix.
	Generated by SudzC.com
*/
#import "AOServices.h"

@implementation AOServices

@synthesize logging, server, defaultServer;

@synthesize service1;


#pragma mark Initialization

-(id)initWithServer:(NSString*)serverName{
	if(self = [self init]) {
		self.server = serverName;
	}
	return self;
}

+(AOServices*)service{
	return (AOServices*)[[AOServices alloc] init];
}

+(AOServices*)serviceWithServer:(NSString*)serverName{
	return (AOServices*)[[AOServices alloc] initWithServer:serverName];
}

#pragma mark Methods

-(void)setLogging:(BOOL)value{
	logging = value;
	[self updateServices];
}

-(void)setServer:(NSString*)value{
	server = value;
	[self updateServices];
}

-(void)updateServices{

	[self updateService: self.service1];
}

-(void)updateService:(SoapService*)service{
	service.logging = self.logging;
	if(self.server == nil || self.server.length < 1) { return; }
	service.serviceUrl = [service.serviceUrl stringByReplacingOccurrencesOfString:defaultServer withString:self.server];
}

#pragma mark Getter Overrides


-(AOService1*)service1{
	if(service1 == nil) {
		service1 = [[AOService1 alloc] init];
	}
	return service1;
}


@end
			